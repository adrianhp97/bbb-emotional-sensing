"use strict";
exports.__esModule = true;
exports["default"] = (function (model) { return "<html>\n<head>\n<meta charset=\"UTF-8\">\n<script> window.H5PIntegration = parent.H5PIntegration || " + JSON.stringify(model.integration, null, 2) + "</script>\n" + model.styles
    .map(function (style) { return "<link rel=\"stylesheet\" href=\"" + style + "\">"; })
    .join('\n    ') + "\n" + model.scripts
    .map(function (script) { return "<script src=\"" + script + "\"></script>"; })
    .join('\n    ') + "\n</head>\n<body>\n\n<form method=\"post\" enctype=\"multipart/form-data\" id=\"h5p-content-form\">\n    <div id=\"post-body-content\">\n        <div class=\"h5p-create\">\n            <div class=\"h5p-editor\"></div>\n        </div>\n    </div>\n    <input type=\"submit\" name=\"submit\" value=\"Create\" class=\"button button-primary button-large\">\n</form>\n<script>\nvar ns = H5PEditor;\n\n(function($) {\n    H5PEditor.init = function() {\n        H5PEditor.$ = H5P.jQuery;\n        H5PEditor.basePath = H5PIntegration.editor.libraryUrl;\n        H5PEditor.fileIcon = H5PIntegration.editor.fileIcon;\n        H5PEditor.ajaxPath = H5PIntegration.editor.ajaxPath;\n        H5PEditor.filesPath = H5PIntegration.editor.filesPath;\n        H5PEditor.apiVersion = H5PIntegration.editor.apiVersion;\n\n        // Semantics describing what copyright information can be stored for media.\n        H5PEditor.copyrightSemantics = H5PIntegration.editor.copyrightSemantics;\n        H5PEditor.metadataSemantics = H5PIntegration.editor.metadataSemantics;\n\n        // Required styles and scripts for the editor\n        H5PEditor.assets = H5PIntegration.editor.assets;\n\n        // Required for assets\n        H5PEditor.baseUrl = '';\n\n        if (H5PIntegration.editor.nodeVersionId !== undefined) {\n            H5PEditor.contentId = H5PIntegration.editor.nodeVersionId;\n        }\n\n        var h5peditor;\n        var $type = $('input[name=\"action\"]');\n        var $upload = $('.h5p-upload');\n        var $create = $('.h5p-create').hide();\n        var $editor = $('.h5p-editor');\n        var $library = $('input[name=\"library\"]');\n        var $params = $('input[name=\"parameters\"]');\n        var library = $library.val();\n\n        // $type.change(function () {\n        //   if ($type.filter(':checked').val() === 'upload') {\n        //     $create.hide();\n        //     $upload.show();\n        //   }\n        //   else {\n        $upload.hide();\n        if (h5peditor === undefined) {\n            $.ajax({\n                error: function(res) {\n                    h5peditor = new ns.Editor(undefined, undefined, $editor[0]);\n                    $create.show();\n                },\n                success: function(res) {\n                    h5peditor = new ns.Editor(\n                        res.library,\n                        JSON.stringify(res.params),\n                        $editor[0]\n                    );\n                    $create.show();\n                    // $type.change();\n                },\n                type: 'GET',\n                url: 'params' + window.location.search\n            });\n        }\n        $create.show();\n        //   }\n        // });\n\n        if ($type.filter(':checked').val() === 'upload') {\n            $type.change();\n        } else {\n            $type\n                .filter('input[value=\"create\"]')\n                .attr('checked', true)\n                .change();\n        }\n\n        $('#h5p-content-form').submit(function(event) {\n            if (h5peditor !== undefined) {\n                var params = h5peditor.getParams();\n\n                if (params.params !== undefined) {\n                    // Validate mandatory main title. Prevent submitting if that's not set.\n                    // Deliberatly doing it after getParams(), so that any other validation\n                    // problems are also revealed\n                    // if (!h5peditor.isMainTitleSet()) {\n\n                    // }\n\n                    // Set main library\n                    $library.val(h5peditor.getLibrary());\n\n                    // Set params\n                    $params.val(JSON.stringify(params));\n\n                    $.ajax({\n                        data: JSON.stringify({\n                            library: h5peditor.getLibrary(),\n                            params\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        type: 'POST'\n                    });\n\n                    return event.preventDefault();\n                    // TODO - Calculate & set max score\n                    // $maxscore.val(h5peditor.getMaxScore(params.params));\n                }\n            }\n        });\n\n        // Title label\n        var $title = $('#h5p-content-form #title');\n        var $label = $title.prev();\n        $title\n            .focus(function() {\n                $label.addClass('screen-reader-text');\n            })\n            .blur(function() {\n                if ($title.val() === '') {\n                    $label.removeClass('screen-reader-text');\n                }\n            })\n            .focus();\n\n        // Delete confirm\n        $('.submitdelete').click(function() {\n            return confirm(H5PIntegration.editor.deleteMessage);\n        });\n    };\n\n    H5PEditor.getAjaxUrl = function(action, parameters) {\n        var url = H5PIntegration.editor.ajaxPath + action;\n\n        if (parameters !== undefined) {\n            for (var property in parameters) {\n                if (parameters.hasOwnProperty(property)) {\n                    url += '&' + property + '=' + parameters[property];\n                }\n            }\n        }\n\n        url += window.location.search.replace(/\\?/g, '&');\n        return url;\n    };\n\n    $(document).ready(H5PEditor.init);\n})(H5P.jQuery);\n</script>\n</body>\n</html>"; });
//# sourceMappingURL=default.js.map